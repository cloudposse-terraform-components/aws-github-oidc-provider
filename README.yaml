name: "aws-github-oidc-provider"
# Canonical GitHub repo
github_repo: "cloudposse-terraform-components/aws-github-oidc-provider"
# Short description of this project
description: |-
  This component authorizes the GitHub OIDC provider as an identity provider for an AWS account. It is intended to be used with
  `aws-teams`, `aws-team-roles`, and/or `github-actions-iam-role.mixin.tf`.
# How to use this project
usage: |-
  **Stack Level**: Global

  Here's an example snippet for how to use this component.

  - This must be installed in the `identity` account in order to use standard SAML roles with role chaining.
  - This must be installed in each individual account where you want to provision a service role for a GitHub action that will be assumed directly by the action.

  For security, since this component adds an identity provider, only SuperAdmin can install it.

  ```yaml
  components:
    terraform:
      github-oidc-provider:
        vars:
          enabled: true
  ```

  ## Configuring the GitHub OIDC Provider

  This component was created to add the GitHub OIDC provider so that GitHub Actions can safely assume roles without the need to store static credentials in the environment. The details of the GitHub OIDC provider are hard coded in the component, however at some point the provider's thumbprint may change, at which point you can use
  [get_github_oidc_thumbprint.sh](https://github.com/cloudposse/terraform-aws-components/blob/main/modules/github-oidc-provider/scripts/get_github_oidc_thumbprint.sh)
  to get the new thumbprint and add it to the list in `var.thumbprint_list`.

  This script will pull one of two thumbprints. There are two possible intermediary certificates for the Actions SSL certificate and either can be returned by the GitHub servers, requiring customers to trust both. This is a known behavior when the intermediary certificates are cross-signed by the CA. Therefore, run this script until both values are retrieved. Add both to `var.thumbprint_list`.

  For more, see https://github.blog/changelog/2023-06-27-github-actions-update-on-oidc-integration-with-aws/

  ## FAQ

  ### I cannot assume the role from GitHub Actions after deploying

  The following error is very common if the GitHub workflow is missing proper permission.

  ```bash
  Error: User: arn:aws:sts::***:assumed-role/acme-core-use1-auto-actions-runner@actions-runner-system/token-file-web-identity is not authorized to perform: sts:TagSession on resource: arn:aws:iam::999999999999:role/acme-plat-use1-dev-gha
  ```

  In order to use a web identity, GitHub Action pipelines must have the following permission. See
  [GitHub Action documentation for more](https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services#adding-permissions-settings).

  ```yaml
  permissions:
    id-token: write # This is required for requesting the JWT
    contents: read # This is required for actions/checkout
  ```

  <!-- prettier-ignore-start -->
  <!-- prettier-ignore-end -->
# External references
references:
  - name: cloudposse-terraform-components
    description: "Cloud Posse's upstream component"
    url: https://github.com/orgs/cloudposse-terraform-components/repositories
tags:
  - component/github-oidc-provider
  - layer/github
  - provider/aws
  - privileged
# Categories of this project
categories:
  - component/github-oidc-provider
  - layer/github
  - provider/aws
  - privileged
# License of this project
license: "APACHE2"
# Badges to display
badges:
  - name: Latest Release
    image: https://img.shields.io/github/release/cloudposse-terraform-components/aws-github-oidc-provider.svg?style=for-the-badge
    url: https://github.com/cloudposse-terraform-components/aws-github-oidc-provider/releases/latest
  - name: Slack Community
    image: https://slack.cloudposse.com/for-the-badge.svg
    url: https://slack.cloudposse.com
related:
  - name: "Cloud Posse Terraform Modules"
    description: Our collection of reusable Terraform modules used by our reference architectures.
    url: "https://docs.cloudposse.com/modules/"
  - name: "Atmos"
    description: "Atmos is like docker-compose but for your infrastructure"
    url: "https://atmos.tools"
contributors: [] # If included generates contribs
